<?php
/**
 * Обрабатывает тест, загружает вопросы из файла и вычисляет результаты.
 * 
 * Файл `data.json` используется для хранения данных о вопросах и результатах тестов.
 * После прохождения теста результаты сохраняются в этом файле.
 * 
 * Обрабатываются данные формы, подсчитываются правильные ответы и вычисляется процент правильных ответов.
 * Затем результаты записываются в файл и происходит перенаправление на страницу с результатами.
 */

$dataFile = "data.json"; // Путь к файлу с данными

/**
 * Проверка существования файла данных и загрузка его содержимого.
 * Если файл не найден, выводится сообщение об ошибке и выполнение скрипта прекращается.
 */
if (!file_exists($dataFile)) {
    echo "Файл данных не найден.";
    exit;
}

/**
 * Декодирование содержимого JSON файла в ассоциативный массив.
 * Если файл не может быть декодирован, создается пустой массив вопросов.
 */
$data = json_decode(file_get_contents($dataFile), true);
$questions = $data["questions"] ?? []; // Используем оператор ?? для безопасного получения массива вопросов

/**
 * Проверка наличия вопросов в файле.
 * Если вопросов нет, выводится сообщение об этом и выполнение скрипта прекращается.
 */
if (empty($questions)) {
    echo "Нет вопросов для теста.";
    exit;
}

/**
 * Обработка POST-запроса.
 * Если запрос отправлен методом POST, выполняется подсчет правильных ответов.
 */
if ($_SERVER["REQUEST_METHOD"] === "POST") {
    $username = $_POST["username"]; // Имя пользователя, введенное в форме

    /**
     * Получаем ответы пользователя.
     * Если ответов нет, то по умолчанию используется пустой массив.
     */
    $userAnswers = $_POST["answer"] ?? [];

    $correctCount = 0; // Переменная для подсчета правильных ответов
    $totalQuestions = count($questions); // Общее количество вопросов

    /**
     * Проходим по всем вопросам и сравниваем ответы пользователя с правильными.
     */
    foreach ($questions as $index => $q) {
        $correct = $q["correct"]; // Массив правильных ответов
        $userResponse = $userAnswers[$index] ?? []; // Ответ пользователя для текущего вопроса

        /**
         * Если вопрос типа checkbox, то ответы пользователя и правильные ответы сортируются
         * для точного сравнения.
         */
        if ($q["type"] === "checkbox") {
            sort($userResponse);
            sort($correct);
            if ($userResponse === $correct) {
                $correctCount++;
            }
        } else {
            // Если ответ не checkbox, то проверяется только первый правильный ответ
            if ($correct[0] == $userResponse) {
                $correctCount++;
            }
        }
    }

    /**
     * Вычисляем процент правильных ответов.
     * Результат округляется до двух знаков после запятой.
     */
    $score = round(($correctCount / $totalQuestions) * 100, 2);

    /**
     * Добавляем результаты теста в массив данных.
     * Массив данных будет записан обратно в файл `data.json`.
     */
    $data["results"][] = [
        "username" => $username,
        "correct" => $correctCount,
        "score" => $score
    ];

    /**
     * Записываем обновленные данные в файл `data.json`.
     * Используется форматирование JSON для лучшей читаемости.
     */
    file_put_contents($dataFile, json_encode($data, JSON_PRETTY_PRINT));

    /**
     * Перенаправление на страницу результатов с передачей параметров.
     * Параметры включают количество правильных ответов и процент правильных ответов.
     */
    header("Location: result.php?correct=$correctCount&score=$score");
    exit;
}
